/*
* Generated by python
* Any changes to this file will be overwritten by the next python run
*/

#pragma once

#include "../../config.h"
#include "indexed_buffer_type.h"
#if 0\
|| (defined(GL_ATOMIC_COUNTER_BUFFER_BINDING))\
|| (defined(GL_SHADER_STORAGE_BUFFER_BINDING))\
|| (defined(GL_TRANSFORM_FEEDBACK_BUFFER_BINDING))\
|| (defined(GL_UNIFORM_BUFFER_BINDING))
namespace Ubpa::gl {
	enum class IndexedBufferBinding : GLenum {
#ifdef GL_ATOMIC_COUNTER_BUFFER_BINDING
		AtomicCounterBufferBinding = GL_ATOMIC_COUNTER_BUFFER_BINDING,
#endif
#ifdef GL_SHADER_STORAGE_BUFFER_BINDING
		ShaderStorageBufferBinding = GL_SHADER_STORAGE_BUFFER_BINDING,
#endif
#ifdef GL_TRANSFORM_FEEDBACK_BUFFER_BINDING
		TransformFeedbackBufferBinding = GL_TRANSFORM_FEEDBACK_BUFFER_BINDING,
#endif
#ifdef GL_UNIFORM_BUFFER_BINDING
		UniformBufferBinding = GL_UNIFORM_BUFFER_BINDING,
#endif
	};
}
#endif

#if 0\
|| (defined(GL_ATOMIC_COUNTER_BUFFER_BINDING) && defined(GL_ATOMIC_COUNTER_BUFFER))\
|| (defined(GL_SHADER_STORAGE_BUFFER_BINDING) && defined(GL_SHADER_STORAGE_BUFFER))\
|| (defined(GL_TRANSFORM_FEEDBACK_BUFFER_BINDING) && defined(GL_TRANSFORM_FEEDBACK_BUFFER))\
|| (defined(GL_UNIFORM_BUFFER_BINDING) && defined(GL_UNIFORM_BUFFER))
namespace Ubpa::gl {
	inline IndexedBufferBinding BindOf(IndexedBufferType type) {
		switch (type) {
#if defined(GL_ATOMIC_COUNTER_BUFFER_BINDING) && defined(GL_ATOMIC_COUNTER_BUFFER)
		case IndexedBufferType::AtomicCounterBuffer:
			return IndexedBufferBinding::AtomicCounterBufferBinding;
#endif
#if defined(GL_SHADER_STORAGE_BUFFER_BINDING) && defined(GL_SHADER_STORAGE_BUFFER)
		case IndexedBufferType::ShaderStorageBuffer:
			return IndexedBufferBinding::ShaderStorageBufferBinding;
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER_BINDING) && defined(GL_TRANSFORM_FEEDBACK_BUFFER)
		case IndexedBufferType::TransformFeedbackBuffer:
			return IndexedBufferBinding::TransformFeedbackBufferBinding;
#endif
#if defined(GL_UNIFORM_BUFFER_BINDING) && defined(GL_UNIFORM_BUFFER)
		case IndexedBufferType::UniformBuffer:
			return IndexedBufferBinding::UniformBufferBinding;
#endif
		}
	}
}
#endif
