/*
* Generated by python
* Any changes to this file will be overwritten by the next python run
*/

#pragma once

#include "../../config.h"
#if 0\
|| (defined(GL_NO_ERROR))\
|| (defined(GL_INVALID_ENUM))\
|| (defined(GL_INVALID_VALUE))\
|| (defined(GL_INVALID_OPERATION))\
|| (defined(GL_STACK_OVERFLOW))\
|| (defined(GL_STACK_UNDERFLOW))\
|| (defined(GL_OUT_OF_MEMORY))\
|| (defined(GL_INVALID_FRAMEBUFFER_OPERATION))\
|| (defined(GL_TABLE_TOO_LARGE))
namespace Ubpa::gl {
	enum class ErrorType : GLenum {
#ifdef GL_NO_ERROR
		NoError = GL_NO_ERROR,
#endif
#ifdef GL_INVALID_ENUM
		InvalidEnum = GL_INVALID_ENUM,
#endif
#ifdef GL_INVALID_VALUE
		InvalidValue = GL_INVALID_VALUE,
#endif
#ifdef GL_INVALID_OPERATION
		InvalidOperation = GL_INVALID_OPERATION,
#endif
#ifdef GL_STACK_OVERFLOW
		StackOverflow = GL_STACK_OVERFLOW,
#endif
#ifdef GL_STACK_UNDERFLOW
		StackUnderflow = GL_STACK_UNDERFLOW,
#endif
#ifdef GL_OUT_OF_MEMORY
		OutOfMemory = GL_OUT_OF_MEMORY,
#endif
#ifdef GL_INVALID_FRAMEBUFFER_OPERATION
		InvalidFramebufferOperation = GL_INVALID_FRAMEBUFFER_OPERATION,
#endif
#ifdef GL_TABLE_TOO_LARGE
		TableTooLarge = GL_TABLE_TOO_LARGE,
#endif
	};
}
#endif

