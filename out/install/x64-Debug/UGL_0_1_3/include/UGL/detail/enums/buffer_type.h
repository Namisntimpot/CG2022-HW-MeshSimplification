/*
* Generated by python
* Any changes to this file will be overwritten by the next python run
*/

#pragma once

#include "../../config.h"
#if 0\
|| (defined(GL_ARRAY_BUFFER))\
|| (defined(GL_ATOMIC_COUNTER_BUFFER))\
|| (defined(GL_COPY_READ_BUFFER))\
|| (defined(GL_COPY_WRITE_BUFFER))\
|| (defined(GL_DISPATCH_INDIRECT_BUFFER))\
|| (defined(GL_DRAW_INDIRECT_BUFFER))\
|| (defined(GL_ELEMENT_ARRAY_BUFFER))\
|| (defined(GL_PIXEL_PACK_BUFFER))\
|| (defined(GL_PIXEL_UNPACK_BUFFER))\
|| (defined(GL_SHADER_STORAGE_BUFFER))\
|| (defined(GL_TEXTURE_BUFFER))\
|| (defined(GL_TRANSFORM_FEEDBACK_BUFFER))\
|| (defined(GL_UNIFORM_BUFFER))
namespace Ubpa::gl {
	enum class BufferType : GLenum {
#ifdef GL_ARRAY_BUFFER
		ArrayBuffer = GL_ARRAY_BUFFER,
#endif
#ifdef GL_ATOMIC_COUNTER_BUFFER
		AtomicCounterBuffer = GL_ATOMIC_COUNTER_BUFFER,
#endif
#ifdef GL_COPY_READ_BUFFER
		CopyReadBuffer = GL_COPY_READ_BUFFER,
#endif
#ifdef GL_COPY_WRITE_BUFFER
		CopyWriteBuffer = GL_COPY_WRITE_BUFFER,
#endif
#ifdef GL_DISPATCH_INDIRECT_BUFFER
		DispatchIndirectBuffer = GL_DISPATCH_INDIRECT_BUFFER,
#endif
#ifdef GL_DRAW_INDIRECT_BUFFER
		DrawIndirectBuffer = GL_DRAW_INDIRECT_BUFFER,
#endif
#ifdef GL_ELEMENT_ARRAY_BUFFER
		ElementArrayBuffer = GL_ELEMENT_ARRAY_BUFFER,
#endif
#ifdef GL_PIXEL_PACK_BUFFER
		PixelPackBuffer = GL_PIXEL_PACK_BUFFER,
#endif
#ifdef GL_PIXEL_UNPACK_BUFFER
		PixelUnpackBuffer = GL_PIXEL_UNPACK_BUFFER,
#endif
#ifdef GL_SHADER_STORAGE_BUFFER
		ShaderStorageBuffer = GL_SHADER_STORAGE_BUFFER,
#endif
#ifdef GL_TEXTURE_BUFFER
		TextureBuffer = GL_TEXTURE_BUFFER,
#endif
#ifdef GL_TRANSFORM_FEEDBACK_BUFFER
		TransformFeedbackBuffer = GL_TRANSFORM_FEEDBACK_BUFFER,
#endif
#ifdef GL_UNIFORM_BUFFER
		UniformBuffer = GL_UNIFORM_BUFFER,
#endif
	};
}
#endif

