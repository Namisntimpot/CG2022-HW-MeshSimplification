/*
* Generated by python
* Any changes to this file will be overwritten by the next python run
*/

#pragma once

#include "../../config.h"
#if 0\
|| (defined(GL_FRAMEBUFFER_COMPLETE))\
|| (defined(GL_FRAMEBUFFER_UNDEFINED))\
|| (defined(GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT))\
|| (defined(GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT))\
|| (defined(GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER))\
|| (defined(GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER))\
|| (defined(GL_FRAMEBUFFER_UNSUPPORTED))\
|| (defined(GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE))\
|| (defined(GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS))
namespace Ubpa::gl {
	enum class FramebufferStatus : GLenum {
#ifdef GL_FRAMEBUFFER_COMPLETE
		FramebufferComplete = GL_FRAMEBUFFER_COMPLETE,
#endif
#ifdef GL_FRAMEBUFFER_UNDEFINED
		FramebufferUndefined = GL_FRAMEBUFFER_UNDEFINED,
#endif
#ifdef GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
		FramebufferIncompleteAttachment = GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT,
#endif
#ifdef GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
		FramebufferIncompleteMissingAttachment = GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT,
#endif
#ifdef GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER
		FramebufferIncompleteDrawBuffer = GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER,
#endif
#ifdef GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER
		FramebufferIncompleteReadBuffer = GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER,
#endif
#ifdef GL_FRAMEBUFFER_UNSUPPORTED
		FramebufferUnsupported = GL_FRAMEBUFFER_UNSUPPORTED,
#endif
#ifdef GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE
		FramebufferIncompleteMultisample = GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE,
#endif
#ifdef GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS
		FramebufferIncompleteLayerTargets = GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS,
#endif
	};
}
#endif

