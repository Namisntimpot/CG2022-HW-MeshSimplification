/*
* Generated by python
* Any changes to this file will be overwritten by the next python run
*/

#pragma once

#include "../../config.h"
#if 0\
|| (defined(GL_PACK_SWAP_BYTES))\
|| (defined(GL_PACK_LSB_FIRST))\
|| (defined(GL_PACK_ROW_LENGTH))\
|| (defined(GL_PACK_SKIP_ROWS))\
|| (defined(GL_PACK_SKIP_PIXELS))\
|| (defined(GL_PACK_ALIGNMENT))\
|| (defined(GL_PACK_IMAGE_HEIGHT))\
|| (defined(GL_PACK_SKIP_IMAGES))\
|| (defined(GL_PACK_COMPRESSED_BLOCK_WIDTH))\
|| (defined(GL_PACK_COMPRESSED_BLOCK_HEIGHT))\
|| (defined(GL_PACK_COMPRESSED_BLOCK_DEPTH))\
|| (defined(GL_PACK_COMPRESSED_BLOCK_SIZE))\
|| (defined(GL_UNPACK_COMPRESSED_BLOCK_WIDTH))\
|| (defined(GL_UNPACK_COMPRESSED_BLOCK_HEIGHT))\
|| (defined(GL_UNPACK_COMPRESSED_BLOCK_DEPTH))\
|| (defined(GL_UNPACK_COMPRESSED_BLOCK_SIZE))\
|| (defined(GL_UNPACK_SWAP_BYTES))\
|| (defined(GL_UNPACK_LSB_FIRST))\
|| (defined(GL_UNPACK_ROW_LENGTH))\
|| (defined(GL_UNPACK_SKIP_ROWS))\
|| (defined(GL_UNPACK_SKIP_PIXELS))\
|| (defined(GL_UNPACK_ALIGNMENT))\
|| (defined(GL_UNPACK_IMAGE_HEIGHT))\
|| (defined(GL_UNPACK_SKIP_IMAGES))
namespace Ubpa::gl {
	enum class PixelStorageMode : GLenum {
#ifdef GL_PACK_SWAP_BYTES
		PackSwapBytes = GL_PACK_SWAP_BYTES,
#endif
#ifdef GL_PACK_LSB_FIRST
		PackLsbFirst = GL_PACK_LSB_FIRST,
#endif
#ifdef GL_PACK_ROW_LENGTH
		PackRowLength = GL_PACK_ROW_LENGTH,
#endif
#ifdef GL_PACK_SKIP_ROWS
		PackSkipRows = GL_PACK_SKIP_ROWS,
#endif
#ifdef GL_PACK_SKIP_PIXELS
		PackSkipPixels = GL_PACK_SKIP_PIXELS,
#endif
#ifdef GL_PACK_ALIGNMENT
		PackAlignment = GL_PACK_ALIGNMENT,
#endif
#ifdef GL_PACK_IMAGE_HEIGHT
		PackImageHeight = GL_PACK_IMAGE_HEIGHT,
#endif
#ifdef GL_PACK_SKIP_IMAGES
		PackSkipImages = GL_PACK_SKIP_IMAGES,
#endif
#ifdef GL_PACK_COMPRESSED_BLOCK_WIDTH
		PackCompressedBlockWidth = GL_PACK_COMPRESSED_BLOCK_WIDTH,
#endif
#ifdef GL_PACK_COMPRESSED_BLOCK_HEIGHT
		PackCompressedBlockHeight = GL_PACK_COMPRESSED_BLOCK_HEIGHT,
#endif
#ifdef GL_PACK_COMPRESSED_BLOCK_DEPTH
		PackCompressedBlockDepth = GL_PACK_COMPRESSED_BLOCK_DEPTH,
#endif
#ifdef GL_PACK_COMPRESSED_BLOCK_SIZE
		PackCompressedBlockSize = GL_PACK_COMPRESSED_BLOCK_SIZE,
#endif
#ifdef GL_UNPACK_COMPRESSED_BLOCK_WIDTH
		UnpackCompressedBlockWidth = GL_UNPACK_COMPRESSED_BLOCK_WIDTH,
#endif
#ifdef GL_UNPACK_COMPRESSED_BLOCK_HEIGHT
		UnpackCompressedBlockHeight = GL_UNPACK_COMPRESSED_BLOCK_HEIGHT,
#endif
#ifdef GL_UNPACK_COMPRESSED_BLOCK_DEPTH
		UnpackCompressedBlockDepth = GL_UNPACK_COMPRESSED_BLOCK_DEPTH,
#endif
#ifdef GL_UNPACK_COMPRESSED_BLOCK_SIZE
		UnpackCompressedBlockSize = GL_UNPACK_COMPRESSED_BLOCK_SIZE,
#endif
#ifdef GL_UNPACK_SWAP_BYTES
		UnpackSwapBytes = GL_UNPACK_SWAP_BYTES,
#endif
#ifdef GL_UNPACK_LSB_FIRST
		UnpackLsbFirst = GL_UNPACK_LSB_FIRST,
#endif
#ifdef GL_UNPACK_ROW_LENGTH
		UnpackRowLength = GL_UNPACK_ROW_LENGTH,
#endif
#ifdef GL_UNPACK_SKIP_ROWS
		UnpackSkipRows = GL_UNPACK_SKIP_ROWS,
#endif
#ifdef GL_UNPACK_SKIP_PIXELS
		UnpackSkipPixels = GL_UNPACK_SKIP_PIXELS,
#endif
#ifdef GL_UNPACK_ALIGNMENT
		UnpackAlignment = GL_UNPACK_ALIGNMENT,
#endif
#ifdef GL_UNPACK_IMAGE_HEIGHT
		UnpackImageHeight = GL_UNPACK_IMAGE_HEIGHT,
#endif
#ifdef GL_UNPACK_SKIP_IMAGES
		UnpackSkipImages = GL_UNPACK_SKIP_IMAGES,
#endif
	};
}
#endif

